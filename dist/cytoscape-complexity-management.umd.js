!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self)["cytoscape-complexity-management"]=t()}(this,(function(){"use strict";function e(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function t(t){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?e(Object(a),!0).forEach((function(e){o(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):e(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,t||"default");if("object"!=typeof a)return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function o(e,t,a){return(t=s(t))in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,o,i,n,d=[],r=!0,l=!1;try{if(i=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;r=!1}else for(;!(r=(a=i.call(s)).done)&&(d.push(a.value),d.length!==t);r=!0);}catch(e){l=!0,o=e}finally{try{if(!r&&null!=s.return&&(n=s.return(),Object(n)!==n))return}finally{if(l)throw o}}return d}}(e,t)||d(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||d(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(e,t){if(e){if("string"==typeof e)return r(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?r(e,t):void 0}}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}class l{#e;#t;#s;#a;#o;#i;nodesMap;edgesMap;metaEdgesMap;edgeToMetaEdgeMap;constructor(e,t){this.#e=e,this.#t=[],this.#s=[],this.#a=null,this.#o=null,this.#i=t,this.nodesMap=new Map,this.edgesMap=new Map,this.metaEdgesMap=new Map,this.edgeToMetaEdgeMap=new Map,this.addRoot()}get owner(){return this.#e}get graphs(){return this.#t}get edges(){return this.#s}get rootGraph(){return this.#a}get siblingGraphManager(){return this.#o}get isVisible(){return this.#i}set owner(e){this.#e=e}set graphs(e){this.#t=e}set edges(e){this.#s=e}set rootGraph(e){if(e.owner!=this)throw"Root not in this graph mgr!";this.#a=e,null==e.parent&&(e.parent=this.owner.newNode("Root node"))}set siblingGraphManager(e){this.#o=e}set isVisible(e){this.#i=e}addRoot(){let e=this.#e.newGraph(this),t=this.#e.newNode(),s=this.addGraph(e,t);return this.#a=s,this.#a}addGraph(e,t){if(null==e)throw"Graph is null!";if(null==t)throw"Parent node is null!";if(this.#t.indexOf(e)>-1)throw"Graph already in this graph mgr!";if(this.#t.push(e),null!=e.parent)throw"Already has a parent!";if(null!=t.child)throw"Already has a child!";return e.parent=t,t.child=e,e}addInterGraphEdge(e,t,s){const a=t.owner,o=s.owner;if(null==a||a.owner!=this)throw"Source not in this graph mgr!";if(null==o||o.owner!=this)throw"Target not in this graph mgr!";if(a==o)return e.isInterGraph=!1,a.addEdge(e,t,s);if(e.isInterGraph=!0,e.source=t,e.target=s,this.#s.indexOf(e)>-1)throw"Edge already in inter-graph edge list!";if(e.owner=this,this.#s.push(e),null==e.source||null==e.target)throw"Edge source and/or target is null!";if(-1!=e.source.edges.indexOf(e)||-1!=e.target.edges.indexOf(e))throw"Edge already in source and/or target incidency list!";return e.source.edges.push(e),e.target.edges.push(e),e}removeGraph(e){if(e.owner!=this)throw"Graph not in this graph mgr";if(e!=this.rootGraph&&(null==e.parent||e.parent.owner.owner!=this))throw"Invalid parent node!";let t=[];t=t.concat(e.edges),t.forEach((t=>{e.removeEdge(t)}));let s=[];s=s.concat(e.nodes),s.forEach((t=>{e.removeNode(t)})),e==this.#a&&(this.#a=null);let a=this.#t.indexOf(e);this.#t.splice(a,1),e.parent.child=null,e.parent=null}removeInterGraphEdge(e){if(null==e)throw"Edge is null!";if(!e.isInterGraph)throw"Not an inter-graph edge!";if(null==e.source||null==e.target)throw"Source and/or target is null!";if(-1==e.source.edges.indexOf(e)||-1==e.target.edges.indexOf(e))throw"Source and/or target doesn't know this edge!";let t=e.source.edges.indexOf(e);if(e.source.edges.splice(t,1),t=e.target.edges.indexOf(e),e.target.edges.splice(t,1),null==e.source.owner||null==e.source.owner.owner)throw"Edge owner graph or owner graph manager is null!";if(-1==e.source.owner.owner.edges.indexOf(e))throw"Not in owner graph manager's edge list!";t=e.source.owner.owner.edges.indexOf(e),e.source.owner.owner.edges.splice(t,1)}getDescendantsInorder(e){let t={edges:new Set,simpleNodes:[],compoundNodes:[]},s=e.child;if(s){s.nodes.forEach((e=>{let s=this.getDescendantsInorder(e);for(var a in s)t[a]=[...t[a]||[],...s[a]];t.edges=new Set(t.edges),e.child?t.compoundNodes.push(e):t.simpleNodes.push(e),e.edges.forEach((e=>t.edges.add(e)))}))}return e.edges.forEach((e=>{t.edges.add(e)})),t}}class g{#n;#e;#d;#s;#r;constructor(e,t){this.#n=e,this.#e=t,this.#d=[],this.#s=[],this.#r=null}get parent(){return this.#n}get owner(){return this.#e}get nodes(){return this.#d}get edges(){return this.#s}get siblingGraph(){return this.#r}set parent(e){this.#n=e}set owner(e){this.#e=e}set nodes(e){this.#d=e}set edges(e){this.#s=e}set siblingGraph(e){this.#r=e}addNode(e){if(null==this.#e)throw"Graph has no graph manager!";if(this.#d.indexOf(e)>-1)throw"Node already in graph!";return e.owner=this,this.#d.push(e),e}addEdge(e,t,s){if(!(this.#d.indexOf(t)>-1&&this.#d.indexOf(s)>-1))throw"Source or target not in graph!";if(t.owner!=s.owner||t.owner!=this)throw"Both owners must be this graph!";return this.#s.forEach((t=>{if(t.ID==e.ID)throw"Edge Already Exist"})),t.owner!=s.owner?null:(e.source=t,e.target=s,e.isInterGraph=!1,e.owner=this,this.#s.push(e),t.edges.push(e),s!=t&&s.edges.push(e),e)}removeNode(e){if(null==e)throw"Node is null!";if(null==e.owner||e.owner!=this)throw"Owner graph is invalid!";if(null==this.owner)throw"Owner graph manager is invalid!";e.edges.slice().forEach((e=>{e.isInterGraph?this.owner.removeInterGraphEdge(e):e.source.owner.removeEdge(e)}));const t=this.#d.indexOf(e);if(-1==t)throw"Node not in owner node list!";return this.nodes.splice(t,1),e}removeEdge(e){if(null==e)throw"Edge is null!";if(null==e.source||null==e.target)throw"Source and/or target is null!";if(null==e.source.owner||null==e.target.owner||e.source.owner!=this||e.target.owner!=this)throw"Source and/or target owner is invalid!";const t=e.source.edges.indexOf(e),s=e.target.edges.indexOf(e);if(!(t>-1&&s>-1))throw"Source and/or target doesn't know this edge!";e.source.edges.splice(t,1),e.target!=e.source&&e.target.edges.splice(s,1);const a=e.source.owner.edges.indexOf(e);if(-1==a)throw"Not in owner's edge list!";return e.source.owner.edges.splice(a,1),e}}class p{#l;#e;#i;#g;#p;constructor(e){this.#l=e,this.#e=null,this.#i=!0,this.#g=!1,this.#p=!1}get ID(){return this.#l}get owner(){if(null==this.#e)throw"Owner graph of a node cannot be null";return this.#e}get isVisible(){return this.#i}get isFiltered(){return this.#g}get isHidden(){return this.#p}set ID(e){this.#l=e}set owner(e){this.#e=e}set isVisible(e){this.#i=e}set isFiltered(e){this.#g=e}set isHidden(e){this.#p=e}}class c extends p{#c;#h;#u;constructor(e,t,s){super(e),this.#c=t,this.#h=s,this.#u=!1}get source(){return this.#c}get target(){return this.#h}get isInterGraph(){return this.#u}set source(e){this.#c=e}set target(e){this.#h=e}set isInterGraph(e){this.#u=e}}class h extends p{#f;#s;#I;constructor(e){super(e),this.#f=null,this.#s=[],this.#I=!1}get child(){return this.#f}get edges(){return this.#s}get isCollapsed(){return this.#I}set child(e){this.#f=e}set edges(e){this.#s=e}set isCollapsed(e){this.#I=e}}class u extends c{#E;constructor(e,t,s){super(D.createUniqueID(),e,t),this.#E=s}get originalEdges(){return this.#E}set originalEdges(e){this.#E=e}}class f{static removedElements={nodeIDListForInvisible:new Set,edgeIDListForInvisible:new Set,metaEdgeIDListForVisible:new Set};static addedElements={nodeIDListForVisible:new Set,edgeIDListForVisible:new Set,metaEdgeIDListForVisible:new Set,edgeIDListToRemove:new Set};static#D(e,t,s){let[a,o,i]=this.traverseDescendants(e,e,t,s);t.removeGraph(e.child),a.forEach((e=>{t.nodesMap.delete(e)})),o.forEach((e=>{let s=t.edgesMap.get(e);t.edgesMap.delete(e);try{D.removeEdgeFromGraph(s)}catch(e){}}));let n=s.nodesMap.get(e.ID);n.isCollapsed=!0,a.forEach((e=>{n=s.nodesMap.get(e),n.isVisible=!1})),o.forEach((e=>{let t=s.edgesMap.get(e);t&&(t.isVisible=!1)})),a.forEach((e=>this.removedElements.nodeIDListForInvisible.add(e))),o.forEach((e=>this.removedElements.edgeIDListForInvisible.add(e))),this.removedElements.metaEdgeIDListForVisible.add(i)}static traverseDescendants(e,t,s,a){let o=[],i=[],n=[];if(e.child){e.child.nodes.forEach((e=>{o.push(e.ID),[...e.edges].forEach((o=>{if(o instanceof u?s.edgesMap.delete(o.ID):i.push(o.ID),o.isInterGraph){let d;if(o.source==e){if(d=this.incidentEdgeIsOutOfScope(a.nodesMap.get(o.target.ID),a.nodesMap.get(t.ID),a),d&&s.metaEdgesMap.has(o.ID)&&1==o.originalEdges.length){d=!1;let e=[...o.originalEdges],r=o.target;i.push(o.ID),s.edgesMap.has(o.ID)&&(s.edgesMap.delete(o.ID),D.removeEdgeFromGraph(o)),s.metaEdgesMap.delete(o.ID),e.forEach((e=>{s.edgeToMetaEdgeMap.delete(e)}));let l=E.addMetaEdge(t.ID,r.ID,e,s,a);n.push({ID:l.ID,sourceID:l.source.ID,targetID:l.target.ID,size:l.originalEdges.length,compound:"T"})}if(d){s.metaEdgesMap.get(o.ID)&&D.removeEdgeFromGraph(o);let e=E.addMetaEdge(t.ID,o.target.ID,[o.ID],s,a);n.push({ID:e.ID,sourceID:e.source.ID,targetID:e.target.ID,size:e.originalEdges.length,compound:"T"})}}else{if(d=this.incidentEdgeIsOutOfScope(a.nodesMap.get(o.source.ID),a.nodesMap.get(t.ID),a),d&&s.metaEdgesMap.has(o.ID)&&1==o.originalEdges.length){d=!1;let e=[...o.originalEdges],r=o.source;i.push(o.ID),s.edgesMap.has(o.ID)&&(s.edgesMap.delete(o.ID),D.removeEdgeFromGraph(o)),s.metaEdgesMap.delete(o.ID),e.forEach((e=>{s.edgeToMetaEdgeMap.delete(e)}));let l=E.addMetaEdge(r.ID,t.ID,e,s,a);n.push({ID:l.ID,sourceID:l.source.ID,targetID:l.target.ID,size:l.originalEdges.length,compound:"T"})}if(d){s.metaEdgesMap.get(o.ID)&&D.removeEdgeFromGraph(o);let e=E.addMetaEdge(o.source.ID,t.ID,[o.ID],s,a);n.push({ID:e.ID,sourceID:e.source.ID,targetID:e.target.ID,size:e.originalEdges.length,compound:"T"})}}}}));let[d,r,l]=this.traverseDescendants(e,t,s,a);o=[...o,...d],i=[...i,...r],n=[...n,...l]}))}return[o,i,n]}static incidentEdgeIsOutOfScope(e,t,s){return e.owner==s.rootGraph||e.owner.parent!=t&&this.incidentEdgeIsOutOfScope(e.owner.parent,t,s)}static#m(e,t,s,a,o=void 0){let i=a.nodesMap.get(e.ID);if(i.isCollapsed){let t=s.addGraph(new g(null,s),e);i.child.siblingGraph=t,t.siblingGraph=i.child,i.isCollapsed=!1}let n=i.child.nodes,d=[...n.filter((e=>!!e.child)),...n.filter((e=>!e.child))],r=[];d.forEach((i=>{if(i.isCollapsed&&t&&!i.isFiltered&&!i.isHidden||!i.isCollapsed&&!i.isFiltered&&!i.isHidden){let n=D.moveNodeToVisible(i,s,a,null==o?e:o);n[0].forEach((e=>{try{this.addedElements.edgeIDListForVisible.add(e)}catch(e){}}));let d=[...this.addedElements.edgeIDListForVisible].filter((e=>s.edgesMap.has(e)));if(this.addedElements.edgeIDListForVisible=new Set(d),n[1].forEach((e=>{try{this.addedElements.edgeIDListToRemove.add(e.ID)}catch(e){}let t=[...this.addedElements.metaEdgeIDListForVisible].filter((t=>t.ID!=e.ID));this.addedElements.metaEdgeIDListForVisible=new Set(t)})),n[2].forEach((e=>{this.addedElements.metaEdgeIDListForVisible.add(e)})),this.addedElements.nodeIDListForVisible.add(i.ID),i.child){let o=s.nodesMap.get(i.ID);this.#m(o,t,s,a,e)}}else if(i.isCollapsed&&!t&&!i.isFiltered&&!i.isHidden){this.addedElements.nodeIDListForVisible.add(i.ID);let t=D.moveNodeToVisible(i,s,a,null==o?e:o);t[0].forEach((e=>{this.addedElements.edgeIDListForVisible.add(e)}));let n=[...this.addedElements.edgeIDListForVisible].filter((e=>s.edgesMap.has(e)));this.addedElements.edgeIDListForVisible=new Set(n),t[1].forEach((e=>{this.addedElements.edgeIDListToRemove.add(e.ID);let t=[...this.addedElements.metaEdgeIDListForVisible].filter((t=>t.ID!=e.ID));this.addedElements.metaEdgeIDListForVisible=new Set(t)})),t[2].forEach((e=>{this.addedElements.metaEdgeIDListForVisible.add(e)})),r.push(i)}})),r.forEach((t=>{s.getDescendantsInorder(t).edges.forEach((o=>{if(s.edgeToMetaEdgeMap.has(o.ID)){let i=D.getTopMetaEdge(s.edgeToMetaEdgeMap.get(o.ID),s),n=s.nodesMap.get(i.source.ID),d=s.nodesMap.get(i.target.ID);if(!(f.incidentEdgeIsOutOfScope(a.nodesMap.get(i.source.ID),a.nodesMap.get(e.ID),a)||f.incidentEdgeIsOutOfScope(a.nodesMap.get(i.target.ID),a.nodesMap.get(e.ID),a)||i.source.ID!=t.ID&&i.target.ID!=t.ID)){if(s.edgesMap.set(i.ID,i),n.owner===d.owner){if(null!=n&&null!=d)try{n.owner.addEdge(i,n,d)}catch(e){}}else if(null!=n&&null!=d)try{s.addInterGraphEdge(i,n,d)}catch(e){}this.addedElements.metaEdgeIDListForVisible.add({ID:i.ID,sourceID:i.source.ID,targetID:i.target.ID,size:i.originalEdges.length,compound:"T"})}}}))}))}static getDescendantNodes(e){let t=[];return e.child&&e.child.nodes.forEach((e=>{t.push(e);let s=this.getDescendantNodes(e);t=[...t,...s]})),t}static collapseNodes(e,t,s,a){this.removedElements={nodeIDListForInvisible:new Set,edgeIDListForInvisible:new Set,metaEdgeIDListForVisible:new Set};let o=new Set;if(t){e.forEach((e=>{this.removedElements.metaEdgeIDListForVisible=new Set;let t=s.nodesMap.get(e);if(t.child){this.collapseCompoundDescendantNodes(t,s,a),this.#D(t,s,a);let e=0;this.removedElements.metaEdgeIDListForVisible.forEach((t=>{e!=this.removedElements.metaEdgeIDListForVisible.size-1&&t?.forEach((e=>{s.edgesMap.delete(e.ID)})),e+=1}));let i=[...this.removedElements.metaEdgeIDListForVisible];[...i[i.length-1]].forEach((e=>{let t=s.metaEdgesMap.get(e.ID);o.add({ID:t.ID,sourceID:t.source.ID,targetID:t.target.ID,size:t.originalEdges.length,compound:"T"})}))}}));let t=new Set;o.forEach((e=>{s.edgesMap.has(e.ID)&&t.add(e)})),this.removedElements.metaEdgeIDListForVisible=t}else e.forEach((e=>{let t=s.nodesMap.get(e);if(t.child){this.#D(t,s,a);let e=0,o=[];this.removedElements.metaEdgeIDListForVisible.forEach((t=>{e!=this.removedElements.metaEdgeIDListForVisible.size-1&&o.push(t),e+=1}));let i=[...this.removedElements.metaEdgeIDListForVisible],n=[...i[i.length-1],...o];o=[],this.removedElements.metaEdgeIDListForVisible=new Set,n.forEach((e=>{let t=s.metaEdgesMap.get(e.ID);this.removedElements.metaEdgeIDListForVisible.add({ID:t.ID,sourceID:t.source.ID,targetID:t.target.ID,size:t.originalEdges.length,compound:"T"})}))}}));return this.removedElements}static collapseCompoundDescendantNodes(e,t,s){e.child&&e.child.nodes.forEach((e=>{if(e.child){this.collapseCompoundDescendantNodes(e,t,s),this.#D(e,t,s);let a=0;this.removedElements.metaEdgeIDListForVisible.forEach((e=>{a!=this.removedElements.metaEdgeIDListForVisible.size-1&&e.forEach((e=>{t.edgesMap.delete(e.ID)})),a+=1}));let o=[...this.removedElements.metaEdgeIDListForVisible],i=[...o[o.length-1]];this.removedElements.metaEdgeIDListForVisible=new Set;let n=[];i.forEach((e=>{let s=t.metaEdgesMap.get(e.ID);n.push({ID:s.ID,sourceID:s.source.ID,targetID:s.target.ID,size:s.originalEdges.length,compound:"T"})})),this.removedElements.metaEdgeIDListForVisible.add(n)}}))}static expandNodes(e,t,s,a){return this.addedElements={nodeIDListForVisible:new Set,edgeIDListForVisible:new Set,metaEdgeIDListForVisible:new Set,edgeIDListToRemove:new Set},e.forEach((e=>{let o=s.nodesMap.get(e),i=a.nodesMap.get(e);i.child&&i.isCollapsed&&!i.isFiltered&&!i.isHidden&&this.#m(o,t,s,a)})),this.addedElements}static collapseAllNodes(e,t){let s=[];return e.rootGraph.nodes.forEach((e=>{e.child&&s.push(e.ID)})),{collapsedNodes:s,...this.collapseNodes(s,!0,e,t)}}static expandAllNodes(e,t){let s=this.getTopCollapsedCompoundNodes(t.rootGraph.parent);return{expandedNodes:s,...this.expandNodes(s,!0,e,t)}}static getTopCollapsedCompoundNodes(e){let t=[];return e.child&&e.child.nodes.forEach((e=>{if(e.child&&e.isCollapsed)t.push(e.ID);else if(e.child&&!e.isCollapsed){let s=this.getTopCollapsedCompoundNodes(e);t=[...t,...s]}})),t}static collapseEdges(e,t,s){let a=t.edgesMap.get(e[0]),o=a.source,i=a.target,n=E.addMetaEdge(o.ID,i.ID,e,t,s),d=[];return e.forEach((e=>{let s=t.edgesMap.get(e);s instanceof u||d.push(e),t.edgesMap.has(e)&&(D.removeEdgeFromGraph(s),t.edgesMap.delete(s.ID))})),d.forEach((e=>{s.edgesMap.get(e).isVisible=!1})),[{ID:n.ID,sourceID:n.source.ID,targetID:n.target.ID,size:n.originalEdges.length,compound:"T"}]}static expandEdges(e,t,s,a){let o=[[],[],[]];return e=e.filter((e=>{let t=s.metaEdgesMap.get(e);return!!t&&1!=t.originalEdges.length})),o[2]=[...e],e.forEach((e=>{let i=s.metaEdgesMap.get(e),n=i.source,d=i.target;i.originalEdges.forEach((e=>{if(s.metaEdgesMap.has(e)){let i=s.metaEdgesMap.get(e),n=s.nodesMap.get(i.source.ID),d=s.nodesMap.get(i.target.ID);if(t&&1!=i.originalEdges.length){let e=this.expandEdges([i.ID],t,s,a);s.metaEdgesMap.delete(i.ID),o[0]=[...o[0],...e[0]],o[1]=[...o[1],...e[1]],o[2]=[...o[2],...e[2]]}else n.owner==d.owner?n.owner.addEdge(i,n,d):s.addInterGraphEdge(i,n,d),s.edgesMap.set(i.ID,i),o[1].push({ID:i.ID,sourceID:n.ID,targetID:d.ID,size:i.originalEdges.length,compound:"T"})}else if(a.edgesMap.has(e)){let t=a.edgesMap.get(e);if(0==t.isFiltered&&0==t.isHidden){t.isVisible=!0,n=s.nodesMap.get(t.source.ID),d=s.nodesMap.get(t.target.ID);let a=new c(t.ID,n,d);n.owner==d.owner?n.owner.addEdge(a,n,d):s.addInterGraphEdge(a,n,d),s.edgesMap.set(a.ID,a),o[0].push(e)}}s.edgeToMetaEdgeMap.delete(e)})),s.metaEdgesMap.delete(e),s.edgesMap.has(e)&&(D.removeEdgeFromGraph(i),s.edgesMap.delete(e))})),o}static collapseEdgesBetweenNodes(e,t,s){let a=[[],[]];for(let o=0;o<e.length;o++)for(let i=o+1;i<e.length;i++){let n=t.nodesMap.get(e[o]),d=t.nodesMap.get(e[i]),r=[];if(n.edges.forEach((e=>{e.source.ID!=d.ID&&e.target.ID!=d.ID||r.includes(e.ID)||r.push(e.ID)})),r.length>1){let e=this.collapseEdges(r,t,s);a[0]=[...a[0],...r],a[1]=[...a[1],...e]}}return a}static expandEdgesBetweenNodes(e,t,s,a){let o=[[],[],[]];for(let i=0;i<e.length;i++)for(let n=i+1;n<e.length;n++){let d=s.nodesMap.get(e[i]),r=s.nodesMap.get(e[n]),l=[];if(d.edges.forEach((e=>{e.source.ID!=r.ID&&e.target.ID!=r.ID||s.metaEdgesMap.has(e.ID)&&(l.includes(e.ID)||1==e.originalEdges.length||l.push(e.ID))})),0!=l.length){let e=this.expandEdges(l,t,s,a);o[0]=[...o[0],...e[0]],o[1]=[...o[1],...e[1]],o[2]=[...o[2],...l]}}return o}static collapseAllEdges(e,t){let s=[];return e.nodesMap.forEach(((e,t)=>{s.push(t)})),this.collapseEdgesBetweenNodes(s,e,t)}static expandAllEdges(e,t){let s=[];return e.nodesMap.forEach(((e,t)=>{s.push(t)})),this.expandEdgesBetweenNodes(s,!0,e,t)}}class I{static filter(e,t,s,a){let o=[],i=[];return t.forEach((e=>{let t=s.edgesMap.get(e);if(t)s.edgesMap.has(e)&&(s.edgesMap.delete(t.ID),D.removeEdgeFromGraph(t)),i.push(e);else if(s.edgeToMetaEdgeMap.has(e)){let t=s.edgeToMetaEdgeMap.get(e);this.updateMetaEdge(t.originalEdges,e,s,a)&&(s.edgesMap.has(t.ID)&&(s.edgesMap.delete(t.ID),D.removeEdgeFromGraph(t)),i.push(t.ID))}let o=a.edgesMap.get(e);o&&(o.isFiltered=!0,o.isVisible=!1)})),e.forEach((e=>{let t=s.nodesMap.get(e);if(t){let n=s.getDescendantsInorder(t);n.edges.forEach((e=>{if(i.push(e.ID),!(e instanceof u)){a.edgesMap.get(e.ID).isVisible=!1}s.edgesMap.has(e.ID)&&(s.edgesMap.delete(e.ID),D.removeEdgeFromGraph(e))})),n.simpleNodes.forEach((e=>{a.nodesMap.get(e.ID).isVisible=!1,o.push(e.ID),e.owner.removeNode(e),s.nodesMap.delete(e.ID)})),n.compoundNodes.forEach((e=>{a.nodesMap.get(e.ID).isVisible=!1,o.push(e.ID),0==e.child.nodes.length&&(e.child.siblingGraph.siblingGraph=null),s.removeGraph(e.child),e.owner.removeNode(e),s.nodesMap.delete(e.ID)})),t.child&&0==t.child.nodes.length&&(t.child.siblingGraph.siblingGraph=null),t.child&&s.removeGraph(t.child),t.owner.removeNode(t),s.nodesMap.delete(e),o.push(e);let d=a.nodesMap.get(e);d.isFiltered=!0,d.isVisible=!1}else{let t=a.nodesMap.get(e);a.getDescendantsInorder(t).edges.forEach((e=>{let t=e.ID;if(s.edgeToMetaEdgeMap.has(t)){let e=s.edgeToMetaEdgeMap.get(t);this.updateMetaEdge(e.originalEdges,t,s,a)&&(s.edgesMap.has(e.ID)&&(s.edgesMap.delete(e.ID),D.removeEdgeFromGraph(e)),i.push(e.ID))}})),t.isFiltered=!0,t.isVisible=!1}})),i=new Set(i),i=[...i],i.concat(o)}static unfilter(e,t,s,a){let o=[],i=[],n=[];return e.forEach((e=>{let d=a.nodesMap.get(e);d.isFiltered=!1;let r=!0;if(0==d.isHidden){let e=d;for(;e.owner!=a.rootGraph;){if(e.owner.parent.isHidden||e.owner.parent.isFiltered||e.owner.parent.isCollapsed){r=!1;break}e=e.owner.parent}}else r=!1;if(r){let e=D.moveNodeToVisible(d,s,a);e[0].forEach((e=>{if(s.edgeToMetaEdgeMap.has(e)){let t=D.getTopMetaEdge(s.edgeToMetaEdgeMap.get(e),s);i.push(t.ID)}else i.push(e)})),e[2].forEach((e=>{n.push(e)}));let r=[];d.isCollapsed||(r=I.makeDescendantNodesVisible(d,s,a),o=[...o,...r.simpleNodes,...r.compoundNodes],i=[...i,...r.edges]),s.getDescendantsInorder(d).edges.forEach((e=>{if(s.edgeToMetaEdgeMap.has(e.ID)){let a=D.getTopMetaEdge(s.edgeToMetaEdgeMap.get(e.ID),s);a.source.ID!=d.ID&&a.target.ID!=d.ID||t.push(e.ID)}})),o.push(d.ID)}else{let e=!0;if(0==d.isHidden){let t=d;for(;t.owner!=a.rootGraph;){if(t.owner.parent.isHidden||t.owner.parent.isFiltered){e=!1;break}t=t.owner.parent}}else e=!1;if(e){let e=[[],[],[]];d.edges.forEach((t=>{if(0==t.isFiltered&&0==t.isHidden)if(t.source.isVisible){let o=D.getVisibleParent(t.target.ID,a);if(o&&f.incidentEdgeIsOutOfScope(t.source,a.nodesMap.get(o),a)){let i=D.recursiveMetaEdgeUpdate(t,s,a);e[1]=[...e[1],...i[0]],e[0]=[...e[0],...i[1]];let n=s.nodesMap.get(o),d=E.addMetaEdge(t.source.ID,n.ID,[t.ID],s,a);e[2].push({ID:d.ID,sourceID:d.source.ID,targetID:d.target.ID,size:d.originalEdges.length,compound:"T"})}}else if(t.target.isVisible){let o=D.getVisibleParent(t.source.ID,a);if(o&&f.incidentEdgeIsOutOfScope(t.target,a.nodesMap.get(o),a)){let i=D.recursiveMetaEdgeUpdate(t,s,a);e[1]=[...e[1],...i[0]],e[0]=[...e[0],...i[1]];let n=s.nodesMap.get(o),d=E.addMetaEdge(n.ID,t.target.ID,[t.ID],s,a);e[2].push({ID:d.ID,sourceID:d.source.ID,targetID:d.target.ID,size:d.originalEdges.length,compound:"T"})}}else{let o=D.getVisibleParent(t.source.ID,a),i=D.getVisibleParent(t.target.ID,a);if(o&&i&&o!=i&&f.incidentEdgeIsOutOfScope(a.nodesMap.get(i),a.nodesMap.get(o),a)&&f.incidentEdgeIsOutOfScope(a.nodesMap.get(o),a.nodesMap.get(i),a)){let n=D.recursiveMetaEdgeUpdate(t,s,a);e[1]=[...e[1],...n[0]],e[0]=[...e[0],...n[1]];let d=s.nodesMap.get(o),r=s.nodesMap.get(i),l=E.addMetaEdge(d.ID,r.ID,[t.ID],s,a);e[2].push({ID:l.ID,sourceID:l.source.ID,targetID:l.target.ID,size:l.originalEdges.length,compound:"T"})}}})),e[0].forEach((e=>{if(s.edgeToMetaEdgeMap.has(e)){let t=D.getTopMetaEdge(s.edgeToMetaEdgeMap.get(e),s);i.push(t.ID)}else i.push(e)})),e[2].forEach((e=>{n.push(e)}))}}})),t.forEach((e=>{let t=a.edgesMap.get(e);if(t.isFiltered=!1,s.edgeToMetaEdgeMap.has(e)){let t=s.edgeToMetaEdgeMap.get(e);if(s.edgesMap.has(t.ID));else{let o=s.nodesMap.get(t.source.ID),n=s.nodesMap.get(t.target.ID);if(null!=o&&null!=n){let d=a.edgesMap.get(e);d.source.owner==d.target.owner?d.source.owner.siblingGraph.addEdge(t,o,n):s.addInterGraphEdge(t,o,n),s.edgesMap.set(t.ID,t),i.push(t.ID)}}}else 0==t.isHidden&&t.source.isVisible&&t.target.isVisible&&(D.moveEdgeToVisible(t,s,a),i.push(t.ID))})),i=new Set(i),i=[...i],[o.concat(i),n]}static makeDescendantNodesVisible(e,t,s){let a={edges:new Set,simpleNodes:[],compoundNodes:[]};if(e.child){e.child.nodes.forEach((e=>{if(0==e.isFiltered&&0==e.isHidden){if(D.moveNodeToVisible(e,t,s)[0].forEach((e=>{a.edges.add(e)})),0==e.isCollapsed){let i=this.makeDescendantNodesVisible(e,t,s);for(var o in i)a[o]=[...a[o]||[],...i[o]];a.edges=new Set(a.edges),e.child?a.compoundNodes.push(e.ID):a.simpleNodes.push(e.ID),e.edges.forEach((e=>{if(0==e.isFiltered&&0==e.isHidden&&e.source.isVisible&&e.target.isVisible)if(t.edgeToMetaEdgeMap.has(e.ID)){let s=D.getTopMetaEdge(e,t);a.edges.add(s.ID)}else a.edges.add(e.ID)}))}}}))}return e.edges.forEach((e=>{if(0==e.isFiltered&&0==e.isHidden&&e.source.isVisible&&e.target.isVisible)if(t.edgeToMetaEdgeMap.has(e.ID)){let s=D.getTopMetaEdge(e,t);a.edges.add(s.ID)}else a.edges.add(e.ID)})),a}static updateMetaEdge(e,t,s,a){let o=!0;return e.forEach(((e,i)=>{if(s.metaEdgesMap.has(e)){let i=s.metaEdgesMap.get(e),n=this.updateMetaEdge(i.originalEdges,t,s,a);o=0==n?n:o}else{let s=a.edgesMap.get(e);0==s?.isFiltered&&0==s?.isHidden&&e!=t&&(o=!1)}})),o}}class E{static addNode(e,t,s,a){let o,i;if(t){let e=s.nodesMap.get(t);o=e.child?e.child:s.addGraph(new g(null,s),e)}else o=s.rootGraph;let n=new h(e);o.addNode(n),s.nodesMap.set(e,n);let d=new h(e);if(o.siblingGraph)o.siblingGraph.addNode(d);else{if(t){let e=a.nodesMap.get(t);i=e.child?e.child:a.addGraph(new g(null,a),e)}else i=a.rootGraph;i.addNode(d),o.siblingGraph=i,i.siblingGraph=o}a.nodesMap.set(e,d)}static addEdge(e,t,s,a,o){let i,n=a.nodesMap.get(t),d=a.nodesMap.get(s),r=o.nodesMap.get(t),l=o.nodesMap.get(s);null!=n&&null!=d&&(i=new c(e,n,d));let g=new c(e,r,l);r.owner===l.owner?(null!=n&&null!=d&&n.owner.addEdge(i,n,d),r.owner.addEdge(g,r,l)):(null!=n&&null!=d&&a.addInterGraphEdge(i,n,d),o.addInterGraphEdge(g,r,l)),null!=n&&null!=d&&a.edgesMap.set(e,i),o.edgesMap.set(e,g)}static addMetaEdge(e,t,s,a,o){let i,n=a.nodesMap.get(e),d=a.nodesMap.get(t);return null!=n&&null!=d&&(i=new u(n,d,s),a.metaEdgesMap.set(i.ID,i),s.forEach((e=>{a.edgeToMetaEdgeMap.set(e,i)}))),n.owner===d.owner?null!=n&&null!=d&&n.owner.addEdge(i,n,d):null!=n&&null!=d&&a.addInterGraphEdge(i,n,d),null!=n&&null!=d&&a.edgesMap.set(i.ID,i),i}static removeNestedEdges(e,t,s){e.forEach((e=>{if(t.metaEdgesMap.has(e)){let a=t.metaEdgesMap.get(e);E.removeNestedEdges(a.originalEdges,t,s),t.metaEdgesMap.delete(e)}else{let t=s.edgesMap.get(e);s.edgesMap.delete(t.ID),D.removeEdgeFromGraph(t)}}))}static recursivelyRemoveDescendantEdges(e,t,s){e.forEach((e=>{let a=t.edgesMap.get(e),o=s.edgesMap.get(e);if(t.metaEdgesMap.has(e)){a=t.metaEdgesMap.get(e),t.edgesMap.delete(a.ID),t.metaEdgesMap.delete(a.ID);try{D.removeEdgeFromGraph(a)}catch(e){}t.edgeToMetaEdgeMap.has(a.ID)&&t.edgeToMetaEdgeMap.delete(a.ID),this.recursivelyRemoveDescendantEdges(a.originalEdges,t,s)}else if(t.edgesMap.has(e)){t.edgesMap.delete(a.ID);try{D.removeEdgeFromGraph(a)}catch(e){}s.edgesMap.delete(o.ID);try{D.removeEdgeFromGraph(o)}catch(e){}}else{t.edgeToMetaEdgeMap.has(e)&&t.edgeToMetaEdgeMap.delete(e),s.edgesMap.delete(o.ID);try{D.removeEdgeFromGraph(o)}catch(e){}}}))}static removeEdge(e,t,s){let a=t.edgesMap.get(e),o=s.edgesMap.get(e);a?t.metaEdgesMap.has(e)?(a=D.getTopMetaEdge(a,t),t.edgesMap.delete(a.ID),t.metaEdgesMap.delete(a.ID),D.removeEdgeFromGraph(a),t.edgeToMetaEdgeMap.has(a.ID)&&t.edgeToMetaEdgeMap.delete(a.ID),this.recursivelyRemoveDescendantEdges(a.originalEdges,t,s)):t.edgesMap.has(e)&&(t.edgesMap.delete(a.ID),D.removeEdgeFromGraph(a),s.edgesMap.delete(o.ID),D.removeEdgeFromGraph(o)):(t.edgeToMetaEdgeMap.has(e)&&D.recursiveMetaEdgeUpdate(o,t),s.edgesMap.delete(o.ID),D.removeEdgeFromGraph(o))}static removeNode(e,t,s){let a=t.nodesMap.get(e),o=s.nodesMap.get(e);if(a){let i=t.getDescendantsInorder(a);i.edges.forEach((e=>{E.removeEdge(e.ID,t,s)})),i.simpleNodes.forEach((e=>{e.owner.removeNode(e),t.nodesMap.delete(e.ID)})),i.compoundNodes.forEach((e=>{e.owner.removeNode(e),t.nodesMap.delete(e.ID)}));let n=s.getDescendantsInorder(o);n.edges.forEach((e=>{E.removeEdge(e.ID,t,s)})),n.simpleNodes.forEach((e=>{e.owner.removeNode(e),s.nodesMap.delete(e.ID)})),n.compoundNodes.forEach((e=>{e.owner.removeNode(e),s.nodesMap.delete(e.ID)})),a.owner.removeNode(a),t.nodesMap.delete(e),o.owner.removeNode(o),s.nodesMap.delete(e)}else o&&(o.owner.removeNode(o),s.nodesMap.delete(e));t.graphs.forEach(((e,s)=>{0==e.nodes.length&&e!=t.rootGraph&&t.graphs.splice(s,1)})),s.graphs.forEach(((e,t)=>{0==e.nodes.length&&e!=s.rootGraph&&s.graphs.splice(t,1)}))}static reconnect(e,t,s,a,o){let i=a.edgesMap.get(e);null==t?t=i.source.ID:null==s&&(s=i.target.ID),i&&(a.edgesMap.delete(i.ID),D.removeEdgeFromGraph(i));let n=o.edgesMap.get(e),d=new c(e,t,s);d.isVisible=n.isVisible,d.isHidden=n.isHidden,D.removeEdgeFromGraph(n),0==d.isFiltered&&0==d.isHidden&&a.nodesMap.get(t).isVisible&&a.nodesMap.get(s).isVisible?d.isVisible=!0:d.isVisible=!1,1==d.isVisible?E.addEdge(e,t,s,a,o):d.source.owner==d.target.owner?d.source.owner.addEdge(d,d.source,d.target):o.addInterGraphEdge(d,d.source,d.target)}static changeParent(e,t,s,a){let o=s.nodesMap.get(e),i=[...o.edges];if(o){let e=s.nodesMap.get(t);null==e&&(e=s.rootGraph.parent);let a=o.owner.removeNode(o);null==e.child&&s.addGraph(new g(null,s),e),e.child.addNode(a)}let n=a.nodesMap.get(e),d=a.nodesMap.get(t);null==d&&(d=a.rootGraph.parent);let r=n.owner.removeNode(n);null==d.child&&a.addGraph(new g(null,a),d),d.child.addNode(r),i.forEach((e=>{if(E.addEdge(e.ID,e.source.ID,e.target.ID,s,a),e.source.isVisible&&e.target.isVisible){a.edgesMap.get(e.ID).isVisible=!1}}))}}class D{static lastID=0;static createUniqueID(){let e="Object#"+this.lastID;return this.lastID++,e}static removeEdgeFromGraph(e){e.owner instanceof l?e.owner.removeInterGraphEdge(e):e.owner.removeEdge(e)}static recursiveMetaEdgeUpdate(e,t,s){let a=[[],[]],o=t.edgeToMetaEdgeMap.get(e.ID);if(null==o)return a;if(t.edgeToMetaEdgeMap.delete(e.ID),t.edgeToMetaEdgeMap.has(o.ID)&&1==o.originalEdges.length){let e=this.recursiveMetaEdgeUpdate(o,t,s);a[0]=[...a[0],...e[0]],a[1]=[...a[1],...e[1]]}if(t.metaEdgesMap.has(o.ID)){let s=[...t.metaEdgesMap.get(o.ID)?.originalEdges];if(s=s.filter((t=>t!=e.ID)),0==s.length)t.metaEdgesMap.delete(o.ID),t.edgesMap.has(o.ID)&&(D.removeEdgeFromGraph(o),t.edgesMap.delete(o.ID),a[0].push({ID:o.ID,sourceID:o.source.ID,targetID:o.target.ID}));else if(1==s.length){if(t.edgeToMetaEdgeMap.delete(s[0]),t.edgeToMetaEdgeMap.has(o.ID)){let e=t.edgeToMetaEdgeMap.get(o.ID);e.originalEdges.push(s[0]),t.edgeToMetaEdgeMap.set(s[0],e);let a=e.originalEdges.filter((e=>e!=o.ID));e.originalEdges=a}if(t.metaEdgesMap.delete(o.ID),t.edgesMap.has(o.ID)){try{D.removeEdgeFromGraph(o)}catch(e){}t.edgesMap.delete(o.ID),a[0].push({ID:o.ID,sourceID:o.source.ID,targetID:o.target.ID})}}else t.metaEdgesMap.get(o.ID).originalEdges=s}return a}static getTopMetaEdge(e,t){let s=t.edgeToMetaEdgeMap.get(e.ID);return s?(t.edgeToMetaEdgeMap.has(s.ID)&&(s=this.getTopMetaEdge(s,t)),s):e}static recursiveExpand(e,t,s=!0){let a=t.edgeToMetaEdgeMap.get(e),o=t.edgeToMetaEdgeMap.get(a.ID);if(null!=o){if(1!=o.originalEdges.length)return this.recursiveExpand(a.ID,t);if(t.edgesMap.has(a.ID)||!s)return a;{let e=t.nodesMap.get(a.source.ID),s=t.nodesMap.get(a.target.ID);if(e&&s)return e.owner==s.owner?e.owner.addEdge(a,e,s):t.addInterGraphEdge(a,e,s),t.edgesMap.set(a.ID,a),a}}return["None",a]}static getVisibleParent(e,t){let s=t.nodesMap.get(e);return s?s.isVisible?s.ID:this.getVisibleParent(s.owner.parent.ID,t):void 0}static moveNodeToVisible(e,t,s,a={ID:void 0}){var o=[[],[],[]];let i=[];e.isVisible=!0;let n=new h(e.ID),d=e.owner.siblingGraph.addNode(n);if(t.nodesMap.set(d.ID,d),e.child)if(0==e.isCollapsed){let s=t.addGraph(new g(null,t),n);s.siblingGraph=e.child,e.child.siblingGraph=s}else{t.getDescendantsInorder(e).edges.forEach((e=>{(f.incidentEdgeIsOutOfScope(s.nodesMap.get(e.source.ID),s.nodesMap.get(a.ID),s)||f.incidentEdgeIsOutOfScope(s.nodesMap.get(e.target.ID),s.nodesMap.get(a.ID),s))&&i.push(e)}))}let r=[[],[],[]],l=[];e.edges.forEach((e=>{s.nodesMap.get(e.source.ID).isVisible&&s.nodesMap.get(e.target.ID).isVisible&&i.push(e),(f.incidentEdgeIsOutOfScope(s.nodesMap.get(e.source.ID),s.nodesMap.get(a.ID),s)||f.incidentEdgeIsOutOfScope(s.nodesMap.get(e.target.ID),s.nodesMap.get(a.ID),s))&&i.push(e)}));let p=new Set(i);return i=[...p],i.forEach((e=>{if(t.edgeToMetaEdgeMap.has(e.ID)){let i=t.edgeToMetaEdgeMap.get(e.ID);if(t.edgesMap.has(i.ID)&&1==i.originalEdges.length){t.edgesMap.delete(i.ID),t.metaEdgesMap.delete(i.ID),t.edgeToMetaEdgeMap.delete(e.ID),o[1].push({ID:i.ID,sourceID:i.source.ID,targetID:i.target.ID});try{D.removeEdgeFromGraph(i)}catch(e){}if(0==e.isFiltered&&0==e.isHidden)if(e.source.isVisible&&e.target.isVisible)D.moveEdgeToVisible(e,t,s),o[0].push(e.ID);else if(e.source.isVisible){let a=this.getVisibleParent(e.target.ID,s);if(a){let i=t.nodesMap.get(a),n=E.addMetaEdge(e.source.ID,i.ID,[e.ID],t,s);o[2].push({ID:n.ID,sourceID:n.source.ID,targetID:n.target.ID,size:n.originalEdges.length,compound:"T"})}}else if(e.target.isVisible){let a=this.getVisibleParent(e.source.ID,s);if(a){let i=t.nodesMap.get(a),n=E.addMetaEdge(i.ID,e.target.ID,[e.ID],t,s);o[2].push({ID:n.ID,sourceID:n.source.ID,targetID:n.target.ID,size:n.originalEdges.length,compound:"T"})}}else{let a=this.getVisibleParent(e.source.ID,s),i=this.getVisibleParent(e.target.ID,s);if(a&&i){let n=t.nodesMap.get(a),d=t.nodesMap.get(i),r=E.addMetaEdge(n.ID,d.ID,[e.ID],t,s);o[2].push({ID:r.ID,sourceID:r.source.ID,targetID:r.target.ID,size:r.originalEdges.length,compound:"T"})}}}else if(t.edgesMap.has(i.ID)&&1!=i.originalEdges.length);else if(1==i.originalEdges.length){if(0==e.isFiltered&&0==e.isHidden)if(e.source.isVisible&&e.target.isVisible){D.moveEdgeToVisible(e,t,s),o[0].push(e.ID);let a=this.recursiveMetaEdgeUpdate(e,t,s);o[1]=[...o[1],...a[0]],o[0]=[...o[0],...a[1]]}else if(e.source.isVisible){let a=this.getVisibleParent(e.target.ID,s);if(a&&f.incidentEdgeIsOutOfScope(e.source,s.nodesMap.get(a),s)){let i=this.recursiveMetaEdgeUpdate(e,t,s);o[1]=[...o[1],...i[0]],o[0]=[...o[0],...i[1]];let n=t.nodesMap.get(a),d=E.addMetaEdge(e.source.ID,n.ID,[e.ID],t,s);o[2].push({ID:d.ID,sourceID:d.source.ID,targetID:d.target.ID,size:d.originalEdges.length,compound:"T"})}}else if(e.target.isVisible){let a=this.getVisibleParent(e.source.ID,s);if(a&&f.incidentEdgeIsOutOfScope(e.target,s.nodesMap.get(a),s)){let i=this.recursiveMetaEdgeUpdate(e,t,s);o[1]=[...o[1],...i[0]],o[0]=[...o[0],...i[1]];let n=t.nodesMap.get(a),d=E.addMetaEdge(n.ID,e.target.ID,[e.ID],t,s);o[2].push({ID:d.ID,sourceID:d.source.ID,targetID:d.target.ID,size:d.originalEdges.length,compound:"T"})}}else{let a=this.getVisibleParent(e.source.ID,s),i=this.getVisibleParent(e.target.ID,s);if(a&&i&&a!=i&&f.incidentEdgeIsOutOfScope(s.nodesMap.get(i),s.nodesMap.get(a),s)&&f.incidentEdgeIsOutOfScope(s.nodesMap.get(a),s.nodesMap.get(i),s)){let n=this.recursiveMetaEdgeUpdate(e,t,s);o[1]=[...o[1],...n[0]],o[0]=[...o[0],...n[1]];let d=t.nodesMap.get(a),r=t.nodesMap.get(i),l=E.addMetaEdge(d.ID,r.ID,[e.ID],t,s);o[2].push({ID:l.ID,sourceID:l.source.ID,targetID:l.target.ID,size:l.originalEdges.length,compound:"T"})}}}else if(i=this.getTopMetaEdge(i,t),1==i.originalEdges.length){let s=this.recursiveExpand(e.ID,t);Array.isArray(s)?(r[1].includes(i)||r[1].push(i),r[2].includes(s[1])||r[2].push(s[1])):(r[1].includes(i)||r[1].push(i),o[0].push(s.ID))}else{let n=this.recursiveExpand(e.ID,t,!1);if(!Array.isArray(n)){o[0].push(i.ID);let e=this.recursiveMetaEdgeUpdate(n,t,s);o[1]=[...o[1],...e[0]],o[0]=[...o[0],...e[1]],i=n}let d=t.nodesMap.get(i.source.ID),r=t.nodesMap.get(i.target.ID);if(d&&r){if(e.source.owner==e.target.owner){if(!I.updateMetaEdge(i.originalEdges,null,t,s))try{e.source.owner.siblingGraph.addEdge(i,d,r);l.push(i)}catch(e){}}else if(!I.updateMetaEdge(i.originalEdges,null,t,s))try{t.addInterGraphEdge(i,d,r);l.push(i)}catch(e){}I.updateMetaEdge(i.originalEdges,null,t,s)||(t.edgesMap.set(i.ID,i),o[0].push(i.ID))}else if(f.incidentEdgeIsOutOfScope(s.nodesMap.get(i.source.ID).isVisible?s.nodesMap.get(i.target.ID):s.nodesMap.get(i.source.ID),s.nodesMap.get(a.ID),s))if(d){let a=this.getVisibleParent(i.target.ID,s);if(a&&f.incidentEdgeIsOutOfScope(e.source.isVisible?e.target:e.source,s.nodesMap.get(a),s)){let e=t.nodesMap.get(a),n=E.addMetaEdge(i.source.ID,e.ID,[i.ID],t,s);o[2].push({ID:n.ID,sourceID:n.source.ID,targetID:n.target.ID,size:n.originalEdges.length,compound:"T"})}}else{let a=this.getVisibleParent(i.source.ID,s);if(a&&f.incidentEdgeIsOutOfScope(e.source.isVisible?e.target:e.source,s.nodesMap.get(a),s)){let e=t.nodesMap.get(a),n=E.addMetaEdge(e.ID,i.target.ID,[i.ID],t,s);o[2].push({ID:n.ID,sourceID:n.source.ID,targetID:n.target.ID,size:n.originalEdges.length,compound:"T"})}}}}else 0==e.isFiltered&&0==e.isHidden&&e.source.isVisible&&e.target.isVisible&&(D.moveEdgeToVisible(e,t,s),o[0].push(e.ID))})),0==r[0].length&&0==r[1].length||(r[1].forEach((e=>{t.edgesMap.delete(e.ID),t.metaEdgesMap.delete(e.ID),o[1].push({ID:e.ID,sourceID:e.source.ID,targetID:e.target.ID});try{D.removeEdgeFromGraph(e)}catch(e){}})),r[2].forEach((e=>{if(t.nodesMap.has(e.source.ID)){let a=this.getVisibleParent(e.target.ID,s);if(a){let i=t.nodesMap.get(a);if(f.incidentEdgeIsOutOfScope(s.nodesMap.get(e.source.ID),s.nodesMap.get(a),s)){let a=E.addMetaEdge(e.source.ID,i.ID,[e.ID],t,s);o[2].push({ID:a.ID,sourceID:a.source.ID,targetID:a.target.ID,size:a.originalEdges.length,compound:"T"})}}}else if(e.target.isVisible){let a=this.getVisibleParent(e.source.ID,s);if(a){let i=t.nodesMap.get(a);if(f.incidentEdgeIsOutOfScope(s.nodesMap.get(e.target.ID),s.nodesMap.get(a),s)){let a=E.addMetaEdge(i.ID,e.target.ID,[e.ID],t,s);o[2].push({ID:a.ID,sourceID:a.source.ID,targetID:a.target.ID,size:a.originalEdges.length,compound:"T"})}}}else{let a=this.getVisibleParent(e.source.ID,s),i=this.getVisibleParent(e.target.ID,s);if(a&&i&&a!=i){let n=t.nodesMap.get(a),d=t.nodesMap.get(i);if(f.incidentEdgeIsOutOfScope(s.nodesMap.get(a),s.nodesMap.get(i),s)&&f.incidentEdgeIsOutOfScope(s.nodesMap.get(i),s.nodesMap.get(a),s)){let a=E.addMetaEdge(n.ID,d.ID,[e.ID],t,s);o[2].push({ID:a.ID,sourceID:a.source.ID,targetID:a.target.ID,size:a.originalEdges.length,compound:"T"})}}}}))),o}static moveEdgeToVisible(e,t,s){e.isVisible=!0;let a,o=new c(e.ID,null,null),i=t.nodesMap.get(e.source.ID),n=t.nodesMap.get(e.target.ID);if(e.source.owner==e.target.owner)try{a=e.source.owner.siblingGraph.addEdge(o,i,n),t.edgesMap.set(a.ID,a)}catch(e){}else a=t.addInterGraphEdge(o,i,n),t.edgesMap.set(a.ID,a)}static getTargetNeighborhoodElements(e,t){let s=t.nodesMap.get(e),a=this.getZeroDistanceNeighbors(s,t);a.nodes.includes(e)||a.nodes.push(e);let o={nodes:[],edges:[]};return a.nodes.forEach((e=>{let s=t.nodesMap.get(e);s.edges.forEach((e=>{e.source.ID==s.ID?o.nodes.push(e.target.ID):o.nodes.push(e.source.ID),o.edges.push(e.ID)}))})),o.nodes=[...new Set([...o.nodes])],o.edges=[...new Set([...o.edges])],o.nodes.forEach((e=>{let s=t.nodesMap.get(e),o=this.getZeroDistanceNeighbors(s,t);a.nodes=[...new Set([...a.nodes,...o.nodes])],a.edges=[...new Set([...a.edges,...o.edges])]})),a.nodes=[...new Set([...a.nodes,...o.nodes])],a.edges=[...new Set([...a.edges,...o.edges])],a.nodes=a.nodes.filter((e=>!t.nodesMap.get(e).isVisible)),a.edges=a.edges.filter((e=>!t.edgesMap.get(e).isVisible)),a}static getZeroDistanceNeighbors(e,t){let s={nodes:[],edges:[]},a=this.getDescendantNeighbors(e),o=this.getPredecessorNeighbors(e,t);return s.nodes=[...new Set([...a.nodes,...o.nodes])],s.edges=[...new Set([...a.edges,...o.edges])],s}static getDescendantNeighbors(e){let t={nodes:[],edges:[]};if(e.child){e.child.nodes.forEach((e=>{t.nodes.push(e.ID),e.edges.forEach((e=>{t.edges.push(e.ID)}));let s=this.getDescendantNeighbors(e);t.nodes=[...t.nodes,...s.nodes],t.edges=[...t.edges,...s.edges]}))}return t}static getPredecessorNeighbors(e,t){let s={nodes:[],edges:[]};if(e.owner!=t.rootGraph){e.owner.nodes.forEach((e=>{s.nodes.push(e.ID),e.edges.forEach((e=>{s.edges.push(e.ID)}))}));let a=this.getPredecessorNeighbors(e.owner.parent,t);s.nodes=[...s.nodes,...a.nodes],s.edges=[...s.edges,...a.edges]}else s.nodes.push(e.ID);return s}}class m{static hide(e,t,s,a){let o=[],i=[];return t.forEach((e=>{let t=s.edgesMap.get(e);if(t)s.edgesMap.has(e)&&(s.edgesMap.delete(t.ID),D.removeEdgeFromGraph(t)),i.push(e);else if(s.edgeToMetaEdgeMap.has(e)){let t=s.edgeToMetaEdgeMap.get(e);this.updateMetaEdge(t.originalEdges,e,s,a)&&(s.edgesMap.has(t.ID)&&(s.edgesMap.delete(t.ID),D.removeEdgeFromGraph(t)),i.push(t.ID))}let o=a.edgesMap.get(e);o&&(o.isHidden=!0,o.isVisible=!1)})),e.forEach((e=>{let t=s.nodesMap.get(e);if(t){let n=s.getDescendantsInorder(t);n.edges.forEach((e=>{if(i.push(e.ID),!(e instanceof u)){a.edgesMap.get(e.ID).isVisible=!1}s.edgesMap.has(e.ID)&&(s.edgesMap.delete(e.ID),D.removeEdgeFromGraph(e))})),n.simpleNodes.forEach((e=>{a.nodesMap.get(e.ID).isVisible=!1,o.push(e.ID),e.owner.removeNode(e),s.nodesMap.delete(e.ID)})),n.compoundNodes.forEach((e=>{a.nodesMap.get(e.ID).isVisible=!1,o.push(e.ID),0==e.child.nodes.length&&(e.child.siblingGraph.siblingGraph=null),s.removeGraph(e.child),e.owner.removeNode(e),s.nodesMap.delete(e.ID)})),t.child&&0==t.child.nodes.length&&(t.child.siblingGraph.siblingGraph=null),t.child&&s.removeGraph(t.child),t.owner.removeNode(t),s.nodesMap.delete(e),o.push(e);let d=a.nodesMap.get(e);d.isHidden=!0,d.isVisible=!1}else{let t=a.nodesMap.get(e);t.isHidden=!0,t.isVisible=!1}})),i=new Set(i),i=[...i],i.concat(o)}static show(e,t,s,a){let o=[],i=[],n=[];return e.forEach((e=>{let d=a.nodesMap.get(e);d.isHidden=!1;let r=!0;if(0==d.isFiltered){let e=d;for(;e.owner!=a.rootGraph;){if(e.owner.parent.isHidden||e.owner.parent.isFiltered||e.owner.parent.isCollapsed){r=!1;break}e=e.owner.parent}}else r=!1;if(r){let e=D.moveNodeToVisible(d,s,a);e[0].forEach((e=>{if(s.edgeToMetaEdgeMap.has(e)){let t=D.getTopMetaEdge(s.edgeToMetaEdgeMap.get(e),s);i.push(t.ID)}else i.push(e)})),e[2].forEach((e=>{n.push(e)}));let r=[];d.isCollapsed||(r=I.makeDescendantNodesVisible(d,s,a),o=[...o,...r.simpleNodes,...r.compoundNodes],i=[...i,...r.edges]),s.getDescendantsInorder(d).edges.forEach((e=>{if(s.edgeToMetaEdgeMap.has(e.ID)){let a=D.getTopMetaEdge(s.edgeToMetaEdgeMap.get(e.ID),s);a.source.ID!=d.ID&&a.target.ID!=d.ID||t.push(e.ID)}})),o.push(d.ID)}})),t.forEach((e=>{let t=a.edgesMap.get(e);if(t.isHidden=!1,s.edgeToMetaEdgeMap.has(e)){let t=s.edgeToMetaEdgeMap.get(e);if(s.edgesMap.has(t.ID));else{let o=s.nodesMap.get(t.source.ID),n=s.nodesMap.get(t.target.ID);if(null!=o&&null!=n){let d=a.edgesMap.get(e);d.source.owner==d.target.owner?d.source.owner.siblingGraph.addEdge(t,o,n):s.addInterGraphEdge(t,o,n),s.edgesMap.set(t.ID,t),i.push(t.ID)}}}else 0==t.isHidden&&t.source.isVisible&&t.target.isVisible&&(D.moveEdgeToVisible(t,s,a),i.push(t.ID))})),i=new Set(i),i=[...i],[o.concat(i),n]}static showAll(e,t){let s=[],a=[];return t.nodesMap.forEach(((e,t)=>{e.isHidden&&s.push(e.ID)})),t.edgesMap.forEach(((e,t)=>{e.isHidden&&a.push(e.ID)})),this.show(s,a,e,t)}}class M{#M;#b;constructor(){this.#M=this.#v(!0),this.#b=this.#v(!1),this.#M.siblingGraphManager=this.#b,this.#b.siblingGraphManager=this.#M}get visibleGraphManager(){return this.#M}get mainGraphManager(){return this.#b}#v(e){return new l(this,e)}newGraph(e){return new g(null,e)}newNode(e){let t=e||D.createUniqueID();return new h(t)}addNode(e,t){let s=this.#M,a=this.#b;E.addNode(e,t,s,a)}addEdge(e,t,s){let a=this.#M,o=this.#b;E.addEdge(e,t,s,a,o)}removeNode(e){let t=this.#M,s=this.#b;E.removeNode(e,t,s)}removeEdge(e){let t=this.#M,s=this.#b;E.removeEdge(e,t,s)}reconnect(e,t,s){let a=this.#M,o=this.#b;E.reconnect(e,t,s,a,o)}changeParent(e,t){let s=this.#M,a=this.#b;E.changeParent(e,t,s,a)}filter(e,t){let s=this.#M,a=this.#b;return I.filter(e,t,s,a)}unfilter(e,t){let s=this.#M,a=this.#b;return I.unfilter(e,t,s,a)}hide(e,t){let s=this.#M,a=this.#b;return m.hide(e,t,s,a)}show(e,t){let s=this.#M,a=this.#b;return m.show(e,t,s,a)}showAll(){let e=this.#M,t=this.#b;return m.showAll(e,t)}collapseNodes(e,t){let s=this.#M,a=this.#b;return f.collapseNodes(e,t,s,a)}expandNodes(e,t){let s=this.#M,a=this.#b;return f.expandNodes(e,t,s,a)}collapseAllNodes(){let e=this.#M,t=this.#b;return f.collapseAllNodes(e,t)}expandAllNodes(){let e=this.#M,t=this.#b;return f.expandAllNodes(e,t)}collapseEdges(e){let t=this.#M,s=this.#b;return t.edgesMap.has(e[0])||e.shift(),f.collapseEdges(e,t,s)}expandEdges(e,t){let s=this.#M,a=this.#b;return f.expandEdges(e,t,s,a)}collapseEdgesBetweenNodes(e){let t=this.#M,s=this.#b;return f.collapseEdgesBetweenNodes(e,t,s)}expandEdgesBetweenNodes(e,t){let s=this.#M,a=this.#b;return f.expandEdgesBetweenNodes(e,t,s,a)}collapseAllEdges(){let e=this.#M,t=this.#b;return f.collapseAllEdges(e,t)}expandAllEdges(){let e=this.#M,t=this.#b;return f.expandAllEdges(e,t)}getHiddenNeighbors(e){let t=this.#b;return D.getTargetNeighborhoodElements(e,t)}isCollapsible(e){let t=this.#b.nodesMap.get(e);return!(!t.child||0!=t.isCollapsed)}isExpandable(e){let t=this.#b.nodesMap.get(e);return!(!t.child||!t.isCollapsed)}}function b(e){var s=new M,a=e.nodes(),o=e.edges();!function e(t,s){for(var a=t.length,o=0;o<a;o++){var i=t[o],n=i.children();s.addNode(i.id(),i.parent().id()),null!=n&&n.length>0&&e(n,s)}}(function(e){var t={};return e.forEach((function(e){t[e.id()]=!0})),e.filter((function(e,s){"number"==typeof e&&(e=s);for(var a=e.parent()[0];null!=a;){if(t[a.id()])return!1;a=a.parent()[0]}return!0}))}(a),s),function(e,t){for(var s=0;s<e.length;s++){var a=e[s];t.addEdge(a.id(),a.source().id(),a.target().id())}}(o,s);var d=[],r=function(){d.forEach((function(e){if(s.visibleGraphManager.nodesMap.get(e.parent().id())){e.isNode()&&s.addNode(e.id(),e.parent().id());var t=d.indexOf(e);t>-1&&d.splice(t,1),D()}}))},l=function(e){var t=e.target;t.parent().id()?s.visibleGraphManager.nodesMap.get(t.parent().id())?(t.isNode()&&s.addNode(t.id(),t.parent().id()),D()):d.push(t):(t.isNode()?s.addNode(t.id(),t.parent().id()):(r(),s.addEdge(t.id(),t.source().id(),t.target().id())),D());r()},g=function(e){var t=e.target;t.isNode()?s.removeNode(t.id()):s.removeEdge(t.id()),D()};e.on("add",l),e.on("remove",g),e.on("move","edge",(function(e){var t=e.target;s.reconnect(t.id(),t.source().id(),t.target().id()),D()})),e.on("move","node",(function(e){var t=e.target;s.changeParent(t.id(),t.parent().id()),D()}));var p=new Set,c=function(){return e.scratch("cyComplexityManagement").options.filterRule},h=function(e,t){return new Set(n(e).filter((function(e){return!t.has(e)})))};function u(e,t){var s=t.collection();e.forEach((function(e){s.merge(t.getElementById(e))})),t.off("remove",g),t.remove(s).forEach((function(e){t.scratch("cyComplexityManagement").removedEles.set(e.id(),e)})),t.on("remove",g)}function f(e,t){return t.getElementById(e.data().parent).data()?t.getElementById(e.data().parent):e.parent().id()?f(e.parent(),t):void 0}function I(e,t){var s=t.collection(),a=t.collection();e.forEach((function(e){var o=t.scratch("cyComplexityManagement").removedEles.get(e);o&&(o.isNode()?s.merge(o):a.merge(o))})),t.off("add",l),s.forEach((function(e){var s,a,o,i,n,d,r=cyInvisible.getElementById(e.id());if(r.id()){var l=cyInvisible.getElementById(r.data().parent),g=f(r,t);if(g&&(g.id()!=l.id()&&(l=cyInvisible.getElementById(g.id())),g.position()&&e.isChildless())){var p=(s=r.position().x,a=r.position().y,o=l.position().x,i=l.position().y,n=g.position().x,d=g.position().y,{x:s+(n-o),y:a+(d-i)});e.position(p)}}})),t.add(s.merge(a)).forEach((function(e){t.scratch("cyComplexityManagement").removedEles.delete(e.id())})),t.on("add",l)}function E(e,t){t.off("add",l),e.forEach((function(e){try{t.add({group:"edges",data:{id:e.ID,source:e.sourceID,target:e.targetID,size:e.size,compound:e.compound}})}catch(e){}})),t.on("add",l)}function D(){var t=c(),a=new Set;e.elements().forEach((function(e){t(e)&&a.add(e.id())})),e.scratch("cyComplexityManagement").removedEles.forEach((function(e){t(e)&&a.add(e.id())}));var o=h(p,a);o.forEach((function(e){p.delete(e)}));var n=h(a,p);n.forEach((function(e){p.add(e)}));var d=[],r=[],l=[],g=[];n.forEach((function(t){e.getElementById(t).length>0&&e.getElementById(t).isNode()||e.scratch("cyComplexityManagement").removedEles.has(t)&&e.scratch("cyComplexityManagement").removedEles.get(t).isNode()?d.push(t):r.push(t)})),o.forEach((function(t){var s;null!==(s=e.scratch("cyComplexityManagement").removedEles.get(t))&&void 0!==s&&s.isNode()?l.push(t):g.push(t)}));var f=s.filter(d,r),D=i(s.unfilter(l,g),2),m=D[0],M=D[1];u(f,e),I(m,e),E(M,e)}var m={getCompMgrInstance:function(){return s},updateFilterRule:function(t){e.scratch("cyComplexityManagement").options.filterRule=t,D()},getHiddenNeighbors:function(t){var a=e.collection();return t.forEach((function(t){var o=s.getHiddenNeighbors(t.id());o.nodes.forEach((function(t){a.merge(e.scratch("cyComplexityManagement").removedEles.get(t))})),o.edges.forEach((function(t){a.merge(e.scratch("cyComplexityManagement").removedEles.get(t))}))})),a},hide:function(t){var a=[],o=[];t.forEach((function(e){e.isNode()?a.push(e.id()):o.push(e.id())})),u(s.hide(a,o),e)},show:function(t){var a=[],o=[];t.forEach((function(e){e.isNode()?a.push(e.id()):o.push(e.id())}));var n=i(s.show(a,o),2),d=n[0],r=n[1];I(d,e),E(r,e)},showAll:function(){var t=i(s.showAll(),2),a=t[0],o=t[1];I(a,e),E(o,e)},collapseNodes:function(t){var a=arguments.length>1&&void 0!==arguments[1]&&arguments[1],o=[];t.forEach((function(e){s.isCollapsible(e.id())&&(o.push(e.id()),e.data("position-before-collapse",{x:e.position().x,y:e.position().y}),e.data("size-before-collapse",{w:e.outerWidth(),h:e.outerHeight()}),e.addClass("cy-expand-collapse-collapsed-node"))}));var i=s.collapseNodes(o,a),n=[],d=[];i.nodeIDListForInvisible.forEach((function(e){n.push(e)})),i.edgeIDListForInvisible.forEach((function(e){n.push(e)})),i.metaEdgeIDListForVisible.forEach((function(e){d.push(e)})),u(n,e),E(d,e)},expandNodes:function(t){var a=arguments.length>1&&void 0!==arguments[1]&&arguments[1],o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,r=[];t.forEach((function(t){s.isExpandable(t.id())&&(r.push(t.id()),o&&b(t.data().id,e,i,d),t.removeClass("cy-expand-collapse-collapsed-node"),t.removeData("position-before-collapse"),t.removeData("size-before-collapse"))})),setTimeout((function(){i.pngExpandGraph=e.png({scale:2,full:!0});var t=s.expandNodes(r,a);I(n(t.nodeIDListForVisible),e),t.nodeIDListForVisible.forEach((function(t){var a=e.getElementById(t);s.isCollapsible(a.id())?(a.removeClass("cy-expand-collapse-collapsed-node"),a.removeData("position-before-collapse"),a.removeData("size-before-collapse")):s.isExpandable(a.id())&&(a.data("position-before-collapse",{x:a.position().x,y:a.position().y}),a.data("size-before-collapse",{w:a.outerWidth(),h:a.outerHeight()}),a.addClass("cy-expand-collapse-collapsed-node"))})),I(n(t.edgeIDListForVisible),e),u(n(t.edgeIDListToRemove),e),E(n(t.metaEdgeIDListForVisible),e)}),o?600:0)},collapseAllNodes:function(){var t=s.collapseAllNodes(),a=[],o=[];t.nodeIDListForInvisible.forEach((function(e){a.push(e)})),t.collapsedNodes.forEach((function(t){var s=e.getElementById(t);s.data("position-before-collapse",{x:s.position().x,y:s.position().y}),s.data("size-before-collapse",{w:s.outerWidth(),h:s.outerHeight()}),s.addClass("cy-expand-collapse-collapsed-node")})),t.edgeIDListForInvisible.forEach((function(e){a.push(e)})),t.metaEdgeIDListForVisible.forEach((function(e){o.push(e)})),u(a,e),E(o,e)},expandAllNodes:function(){var t=s.expandAllNodes();I(n(t.nodeIDListForVisible),e),t.expandedNodes.forEach((function(t){var s=e.getElementById(t);s.removeClass("cy-expand-collapse-collapsed-node"),s.removeData("position-before-collapse"),s.removeData("size-before-collapse")})),I(n(t.edgeIDListForVisible),e);var a=[];e.edges('[compound = "T"]').forEach((function(e){s.visibleGraphManager.edgesMap.has(e.data().id)||a.push(e.data().id)})),u([].concat(n(t.edgeIDListToRemove),a),e)},collapseEdges:function(t){var a=new Map;t.forEach((function(e){var t=[e.source().id(),e.target().id()].sort().join("-");a.has(t)?a.get(t).push(e.id()):a.set(t,[e.id()])})),Array.from(a.values()).forEach((function(t){if(t.length>1){var a=s.collapseEdges(t);u(t,e),E(a,e)}}))},collapseEdgesBetweenNodes:function(t){var a=[];t.forEach((function(e){a.push(e.id())}));var o=s.collapseEdgesBetweenNodes(a);u(o[0],e),E(o[1],e)},collapseAllEdges:function(){var t=s.collapseAllEdges();u(t[0],e),E(t[1],e)},expandEdges:function(t){var a=arguments.length>1&&void 0!==arguments[1]&&arguments[1],o=[];t.forEach((function(e){o.push(e.id())}));var i=s.expandEdges(o,a);u(i[2],e),I(i[0],e),E(i[1],e)},expandEdgesBetweenNodes:function(t){var a=arguments.length>1&&void 0!==arguments[1]&&arguments[1],o=[];t.forEach((function(e){o.push(e.id())}));var i=s.expandEdgesBetweenNodes(o,a);u(i[2],e),I(i[0],e),E(i[1],e)},expandAllEdges:function(){var t=s.expandAllEdges();u(t[2],e),I(t[0],e),E(t[1],e)},isCollapsible:function(e){return s.isCollapsible(e.id())},isExpandable:function(e){return s.isExpandable(e.id())}},b=function(e,s,a,o){var i=v(instance.getCompMgrInstance("get").mainGraphManager.nodesMap.get(e));cyLayout.remove(cyLayout.elements()),cyLayout.add({group:"nodes",data:{id:e,parent:null,label:document.getElementById("cbk-flag-display-node-labels").checked?e:""},position:cyInvisible.getElementById(e).position()}).style({"background-color":"#CCE1F9"});var d=[];i.compoundNodes.forEach((function(e){0!=cyLayout.getElementById(e.owner.parent.ID).length?cyLayout.add({group:"nodes",data:{id:e.ID,parent:e.owner.parent.ID,label:document.getElementById("cbk-flag-display-node-labels").checked?e.ID:""},position:cyInvisible.getElementById(e.ID).position()}):d.push({group:"nodes",data:{id:e.ID,parent:e.owner.parent.ID,label:document.getElementById("cbk-flag-display-node-labels").checked?e.ID:""},position:cyInvisible.getElementById(e.ID).position()})})),d.forEach((function(e){cyLayout.add(e)})),i.simpleNodes.forEach((function(e){try{cyLayout.add({group:"nodes",data:{id:e.ID,parent:e.owner.parent.ID,label:document.getElementById("cbk-flag-display-node-labels").checked?e.ID:""},position:cyInvisible.getElementById(e.ID).position()})}catch(e){console.log(e)}})),n(i.edges).forEach((function(e){try{0==cyLayout.getElementById(e.source.ID).length?cyLayout.add({group:"nodes",data:{id:e.source.ID,label:document.getElementById("cbk-flag-display-node-labels").checked?e.source.ID:""},position:cyInvisible.getElementById(e.source.ID).position()}):0==cyLayout.getElementById(e.target.ID).length&&cyLayout.add({group:"nodes",data:{id:e.target.ID,label:document.getElementById("cbk-flag-display-node-labels").checked?e.target.ID:""},position:cyInvisible.getElementById(e.target.ID).position()}),cyLayout.add({group:"edges",data:{id:e.ID,source:e.source.ID,target:e.target.ID}})}catch(e){}})),cyLayout.layout({name:"fcose",randomize:!1,animate:!1}).run();var r=cyLayout.getElementById(e).boundingBox(),l=r.w,g=r.h;cyLayout.nodes().forEach((function(e){e.style("label",e.id())})),document.getElementsByName("cbk-flag-display-node-label-pos").forEach((function(e){e.checked&&o(e.value)})),null!=a&&(a.pngSizeProxyGraph=cyLayout.png({scale:2,full:!0})),cyLayout.remove(cyLayout.elements());var p=w(s.getElementById(e));s.nodes().unselect();var c=[];if(s.nodes().forEach((function(e){if(e.id()!=p.id()&&0==e.parent().length){e.isChildless()?e.select():y(e);var a=s.collection(s.$(":selected")).boundingBox(),o=(a=t(t({},a),{},{w:e.width(),h:e.height()})).w,i=a.h;c.push({id:e.id(),data:s.$(":selected"),pos:{x:(a.x2+a.x1)/2,y:(a.y1+a.y2)/2}});var n=cyLayout.add({group:"nodes",data:{id:e.id(),label:e.id()}});n.position({x:(a.x2+a.x1)/2,y:(a.y1+a.y2)/2}),n.style({width:Math.max(o,i),height:Math.max(o,i),label:document.getElementById("cbk-flag-display-node-labels").checked?n.data().id:""}),s.nodes().unselect()}})),0==s.getElementById(e).parent().length){var h=cyLayout.add(s.getElementById(e).clone());h.unselect(),h.position({x:s.getElementById(e).position().x,y:s.getElementById(e).position().y}),h.style({width:Math.max(l,g)+"px",height:Math.max(l,g)+"px","background-color":"#CCE1F9",label:document.getElementById("cbk-flag-display-node-labels").checked?h.data().id:""})}else{var u=cyLayout.add({group:"nodes",data:{id:p.id(),label:p.id()}});u.position({x:p.position().x,y:p.position().y}),u.style({label:document.getElementById("cbk-flag-display-node-labels").checked?u.data().id:""}),y(p);var f=s.$(":selected");s.nodes().unselect(),cyLayout.add(f),f.forEach((function(a){a.select();var o=s.collection(s.$(":selected")).boundingBox(),i=(o=t(t({},o),{},{w:a.width(),h:a.height()})).w,n=o.h;if(a.id()!=e)a.isChildless()&&(c.push({id:a.id(),data:s.$(":selected"),pos:{x:(o.x2+o.x1)/2,y:(o.y1+o.y2)/2}}),(u=cyLayout.getElementById(a.id())).position({x:(o.x2+o.x1)/2,y:(o.y1+o.y2)/2}),u.style({width:Math.max(i,n)+"px",height:Math.max(i,n)+"px",label:document.getElementById("cbk-flag-display-node-labels").checked?u.data().id:""}));else{var d=cyLayout.getElementById(a.id());d.position({x:a.position().x,y:a.position().y}),d.style({width:Math.max(l,g)+"px",height:Math.max(l,g)+"px","background-color":"#CCE1F9",label:document.getElementById("cbk-flag-display-node-labels").checked?d.data().id:""})}s.nodes().unselect()}))}s.fit(),cyLayout.layout({name:"fcose",quality:"proof",animate:!0,animationDuration:500,randomize:!1,nodeSeparation:25,fixedNodeConstraint:[{nodeId:e,position:{x:s.$("#"+e).position("x"),y:s.$("#"+e).position("y")}}]}).run(),c.forEach((function(t){var s,a,o,i,n,d,r=cyLayout.getElementById(t.id).boundingBox(),l={x:(r.x2+r.x1)/2,y:(r.y1+r.y2)/2},g=(s=t.pos,a=l,o=t.pos,i={x:a.x-s.x,y:a.y-s.y},{x:o.x+i.x,y:o.y+i.y}),p=(n=t.pos,{x:(d=g).x-n.x,y:d.y-n.y});t.data.forEach((function(t){x(t,p,e)}))})),s.fit(),s.getElementById(e).select()};function v(e){var t={edges:new Set,simpleNodes:[],compoundNodes:[]},s=e.child;s&&s.nodes.forEach((function(e){var s=v(e);for(var a in s)t[a]=[].concat(n(t[a]||[]),n(s[a]));t.edges=new Set(t.edges),e.child?t.compoundNodes.push(e):t.simpleNodes.push(e),e.edges.forEach((function(e){return t.edges.add(e)}))}));return t}function y(e){var t=e.children();t.nonempty()&&t.forEach((function(e){e.select(),y(e)}))}function w(e){return 0!=e.parent().length?w(e.parent()):e}function x(e,t,s){e.isChildless()&&e.id()!=s?e.animate({position:{x:e.position().x+t.x,y:e.position().y+t.y}},{duration:500}):e.children().forEach((function(e){x(e,t,s)}))}return m}var v,y,w=(v=Math.max,y=Date.now||function(){return(new Date).getTime()},function(e,t,s){var o,i,n,d,r,l,g,p,c,h=0,u=!1,f=!0;if("function"!=typeof e)throw new TypeError("Expected a function");if(t=t<0?0:+t||0,!0===s){var I=!0;f=!1}else c=a(p=s),!p||"object"!=c&&"function"!=c||(I=!!s.leading,u="maxWait"in s&&v(+s.maxWait||0,t),f="trailing"in s?!!s.trailing:f);function E(t,s){s&&clearTimeout(s),i=l=g=void 0,t&&(h=y(),n=e.apply(r,o),l||i||(o=r=void 0))}function D(){var e=t-(y()-d);e<=0||e>t?E(g,i):l=setTimeout(D,e)}function m(){E(f,l)}function M(){if(o=arguments,d=y(),r=this,g=f&&(l||!I),!1===u)var s=I&&!l;else{i||I||(h=d);var a=u-(d-h),p=a<=0||a>u;p?(i&&(i=clearTimeout(i)),h=d,n=e.apply(r,o)):i||(i=setTimeout(m,a))}return p&&l?l=clearTimeout(l):l||t===u||(l=setTimeout(D,t)),s&&(p=!0,n=e.apply(r,o)),!p||l||i||(o=r=void 0),n}return M.cancel=function(){l&&clearTimeout(l),i&&clearTimeout(i),h=0,i=l=g=void 0},M}),x={name:"fcose",animate:!0,randomize:!1,stop:function(){initializer(cy)}};function G(e){var t=cy.nodes().filter((function(e){return e.isChildless()})),s=cyVisible.nodes().filter((function(e){return e.isChildless()})),a=cyInvisible.nodes().filter((function(e){return e.isChildless()})),o=cyLayout.nodes().filter((function(e){return e.isChildless()}));t.style("text-valign",e),s.style("text-valign",e),a.style("text-valign",e),o.style("text-valign",e)}function N(e,s,o){var i,n=e,d=function(){var e=s.scratch("_cyExpandCollapse");return e&&e.cueUtilities},r={init:function(){var e=document.createElement("canvas");e.classList.add("expand-collapse-canvas");var a=document.getElementById("cy"),n=e.getContext("2d");a.appendChild(e);var d=function(e){var t=e.getBoundingClientRect();return{top:t.top+document.documentElement.scrollTop,left:t.left+document.documentElement.scrollLeft}};function r(){var t=a.offsetWidth,o=a.offsetHeight,i=t*c.pixelRatio,n=o*c.pixelRatio;e.width=i,e.height=n,e.style.width="".concat(t,"px"),e.style.height="".concat(o,"px"),s.trigger("cyCanvas.resize")}s.on("resize",(function(){r()})),e.setAttribute("style","position:absolute; top:0; left:0; z-index:".concat(c().zIndex,";"));var g=w((function(){e.height=s.container().offsetHeight,e.width=s.container().offsetWidth,e.style.position="absolute",e.style.top=0,e.style.left=0,e.style.zIndex=c().zIndex,setTimeout((function(){var t=d(e),o=d(a);e.style.top=-(t.top-o.top),e.style.left=-(t.left-o.left),s&&h()}),0)}),250);r();var p={};function c(){return s.scratch("cyComplexityManagement").options}function h(){var e=s.width(),t=s.height();n.clearRect(0,0,e,t),i=null}var u,f,I=(f=null,function(e,t,s,a,o){e!==f?((u=new Image(a,o)).src=e,u.onload=function(){n.drawImage(u,t,s,a,o),f=e}):n.drawImage(u,t,s,a,o)});s.on("resize",p.eCyResize=function(){g()}),s.on("expandcollapse.clearvisualcue",(function(){i&&h()}));var E=null,D=null;function m(e,t,s,a){e?t.layout(s).run():a(t)}s.on("mousedown",p.eMouseDown=function(e){E=e.renderedPosition||e.cyRenderedPosition}),s.on("mouseup",p.eMouseUp=function(e){D=e.renderedPosition||e.cyRenderedPosition}),s.on("remove","node",p.eRemove=function(e){e.target==i&&h()}),s.on("select unselect",p.eSelect=function(){i&&h();var e=s.nodes(":selected");if(1===e.length){var t=e[0];(o.isExpandable(t)||o.isCollapsible(t))&&function(e){var t,a=e.hasClass("cy-expand-collapse-collapsed-node"),o=c().expandCollapseCueSize,d=c().expandCollapseCueLineSize;if("top-left"===c().expandCollapseCuePosition){var r=s.zoom()<1?o/(2*s.zoom()):o/2,g=parseFloat(e.css("border-width"));t={x:e.position("x")-e.width()/2-parseFloat(e.css("padding-left"))+g+r+1,y:e.position("y")-e.height()/2-parseFloat(e.css("padding-top"))+g+r+1}}else{var p=c().expandCollapseCuePosition;t="function"==typeof p?p.call(this,e):p}var h=l(t),u=((o=Math.max(o,o*s.zoom()))-(d=Math.max(d,d*s.zoom())))/2,f=h.x,E=h.y,D=f-o/2,m=E-o/2,M=o;if(a&&c().expandCueImage)I(c().expandCueImage,D,m,o,o);else if(!a&&c().collapseCueImage)I(c().collapseCueImage,D,m,o,o);else{var b=n.fillStyle,v=n.lineWidth,y=n.strokeStyle;n.fillStyle="black",n.strokeStyle="black",n.ellipse(f,E,o/2,o/2,0,0,2*Math.PI),n.fill(),n.beginPath(),n.strokeStyle="white",n.lineWidth=Math.max(2.6,2.6*s.zoom()),n.moveTo(D+u,m+o/2),n.lineTo(D+d+u,m+o/2),a&&(n.moveTo(D+o/2,m+u),n.lineTo(D+o/2,m+d+u)),n.closePath(),n.stroke(),n.strokeStyle=y,n.fillStyle=b,n.lineWidth=v}e._private.data.expandcollapseRenderedStartX=D,e._private.data.expandcollapseRenderedStartY=m,e._private.data.expandcollapseRenderedCueSize=M,i=e}(t)}}),s.on("tap",p.eTap=function(e){var a=i;(function(e,t,s,a,o){if(!e)return!1;var i=e.data("expandcollapseRenderedStartX"),n=e.data("expandcollapseRenderedStartY"),d=e.data("expandcollapseRenderedCueSize"),r=i+d,l=n+d,g=t.renderedPosition||t.cyRenderedPosition,p=g.x,c=g.y,h=(s.expandCollapseCueSensitivity-1)/2;return Math.abs(a.x-o.x)<5&&Math.abs(a.y-o.y)<5&&p>=i-d*h&&p<=r+d*h&&c>=n-d*h&&c<=l+d*h})(a,e,c(),E,D)&&function(e,s,a,i,n,d,r){console.log("Called processCueTap"),e=t(t({},e),i.options().layout);var l=document.getElementById("cbk-run-layout3").checked,g=document.getElementById("cbk-flag-recursive").checked;if(o.isCollapsible(s))a(),o.collapseNodes([s],g),m(l,i,e,n);else if(o.isExpandable(s)){a(),console.log("[node]: ".concat([s]," cbkFlagRecursiveChecked: ").concat(g," cbkRunLayout3checked: ").concat(l," pngImage: ").concat(d," setLabelPosition: ").concat(r));try{o.expandNodes([s],g,l,d,r)}catch(e){console.error(e),console.log("couldn't expand nodes")}setTimeout((function(){a(),m(l,i,e,n)}),l?700:0)}}(x,a,h,s,initializer,pngImage,G)}),s.on("afterUndo afterRedo",p.eUndoRedo=p.eSelect),s.on("position","node",p.ePosition=p.eSelect),s.on("pan zoom",p.ePosition),p.hasEventFields=!0,function(e){var t=s.scratch("_cyExpandCollapse");null==t&&(t={}),t.cueUtilities=e,s.scratch("_cyExpandCollapse",t)}(p)},unbind:function(){var e=d();e.hasEventFields?(s.trigger("expandcollapse.clearvisualcue"),s.off("mousedown","node",e.eMouseDown).off("mouseup","node",e.eMouseUp).off("remove","node",e.eRemove).off("tap","node",e.eTap).off("add","node",e.eAdd).off("position","node",e.ePosition).off("pan zoom",e.ePosition).off("select unselect",e.eSelect).off("free","node",e.eFree).off("resize",e.eCyResize).off("afterUndo afterRedo",e.eUndoRedo)):console.log("events to unbind does not exist")},rebind:function(){var e=d();e.hasEventFields?s.on("mousedown","node",e.eMouseDown).on("mouseup","node",e.eMouseUp).on("remove","node",e.eRemove).on("tap","node",e.eTap).on("add","node",e.eAdd).on("position","node",e.ePosition).on("pan zoom",e.ePosition).on("select unselect",e.eSelect).on("free","node",e.eFree).on("resize",e.eCyResize).on("afterUndo afterRedo",e.eUndoRedo):console.log("events to rebind does not exist")}},l=function(e){var t=s.pan(),a=s.zoom();return{x:e.x*a+t.x,y:e.y*a+t.y}};if(r[n])return r[n].apply(s.container(),Array.prototype.slice.call(arguments,1));if("object"==a(n)||!n)return r.init.apply(s.container(),arguments);throw new Error("No such function `"+n+"` for cytoscape.js-expand-collapse")}function V(e){function t(e,t){void 0===e.scratch("cyComplexityManagement")&&e.scratch("cyComplexityManagement",{});var s=e.scratch("cyComplexityManagement");return void 0===t?s:s[t]}function s(e,s,a){t(e)[s]=a}e("core","complexityManagement",(function(e){var a=this,o={filterRule:function(e){return!1},cueEnabled:!0,expandCollapseCuePosition:"top-left",expandCollapseCueSize:12,expandCollapseCueLineSize:8,expandCueImage:void 0,collapseCueImage:void 0,expandCollapseCueSensitivity:1,zIndex:999};if("get"!==e){o=function(e,t){var s={};for(var a in e)s[a]=e[a];for(var a in t)s.hasOwnProperty(a)&&(s[a]=t[a]);return s}(o,e);var i=b(a),n=new Map;s(a,"options",o),s(a,"api",i),s(a,"removedEles",n),o.cueEnabled&&N(o,a,i)}return t(a,"api")}))}return document.getElementsByName("cbk-flag-display-node-label-pos"),void 0!==window.cytoscape&&V(window.cytoscape),V}));
